{"version":3,"sources":["config.js","Utils/apollo.js","Components/Header/HeaderContainer.js","Components/Header/HeaderWrapper.js","Components/Header/HeaderTitle.js","Components/Header/HeaderSubtitle.js","Components/Header/Header.js","Components/Header/GithubLogin.js","Components/Common/LoaderSvg.js","Components/Common/Loader.js","Components/Blog/BlogContainer.js","Components/Blog/Card/CardContainer.js","Components/Blog/Card/CardHeader.js","Components/Blog/Card/CardCategory.js","Components/Blog/Card/CardTitle.js","Components/Blog/Card/CardDescription.js","Components/Blog/Card/CardReadingTime.js","Components/Blog/Card/Card.js","Containers/Blog.js","Utils/emoji.js","Utils/tools.js","Utils/auth.js","Components/Post/PostContainer.js","Components/Post/PostTitle.js","Components/Post/PostDate.js","Components/Post/PostDateLink.js","Components/Post/PostReaction.js","Components/Post/BackButton.js","Components/Post/Author/AuthorDetails.js","Components/Post/Author/AuthorAvatar.js","Components/Post/Author/AuthorName.js","Components/Markdown/Overrides.js","Components/Post/Comment/CommentContainer.js","Components/Post/Comment/CommentLink.js","Components/Post/Comment/CommentLinkContainer.js","Containers/BlogPost.js","Router.js","Containers/GithubCallback.js","Components/Theme/Sun.js","Components/Theme/Moon.js","Components/Theme/Toggler.js","Components/Theme/GlobalStyles.js","Components/Theme/Theme.js","Application.js","Components/Theme/useDarkMode.js","serviceWorker.js","index.js"],"names":["config","backgroundColor","backgroundColorDark","titleColor","titleColorDark","subtitleColor","subtitleColorDark","client","ApolloClient","uri","request","operation","setContext","headers","authorization","atob","userClient","token","HeaderContainer","styled","div","props","theme","mode","HeaderWrapper","HeaderTitle","h1","HeaderSubtitle","Header","enableOAuth","OAuthClientID","ButtonContainer","absolute","Button","button","Text","span","GithubLogin","isAbsolute","isLoggedIn","localStorage","getItem","onClick","a","async","window","location","href","icon","faGithub","LoaderSvg","fill","width","height","viewBox","xmlns","stroke","fill-rule","transform","stroke-width","stroke-opacity","cx","cy","r","d","attributeName","type","from","to","dur","repeatCount","LoaderContainer","Loader","BlogContainer","CardContainer","CardHeader","StyledCategory","body","CardCategory","value","key","id","style","color","name","CardTitle","h2","CardDescription","p","ReadingTime","CardReadingTime","time","Card","blog","useState","labels","setLabels","history","useHistory","useEffect","nodes","filter","map","i","readingTime","minutes","title","number","push","bodyText","GET_POSTS","gql","Blog","posts","setPosts","useQuery","loading","error","data","console","log","repository","issues","v","emojis","getNameByEmoji","emoji","obj","reversed","Object","keys","forEach","reverseMapping","getAuthenticatedUser","fetch","Headers","response","json","result","PostContainer","PostTitle","PostDate","toggleBorder","PostDateLink","text","PostReaction","BackButton","AuthorDetails","AuthorAvatar","img","AuthorName","HyperLink","children","target","rel","className","jsx","CodeBlock","language","docco","BlogHome","issueNumber","parseInt","split","pop","post","setPost","postNodeId","setPostNodeId","reactionPopup","setReactionPopup","postReactions","setPostReactions","setPostComments","reactionsContainer","useRef","userToken","setReactionFun","useCallback","reactions","reactions_array","element","emojiName","by","user","login","content","issue","comments","go","back","src","author","avatarUrl","alt","moment","updatedAt","format","url","options","overrides","component","pre","onSelect","length","reactionToAdd","mutate","mutation","node_id","current","forceUpdate","toggleReaction","createBrowserHistory","require","Router","exact","path","BlogPost","OAuthSecret","GithubCallback","setLoading","code","method","URLSearchParams","client_id","client_secret","authenticate","search","get","then","setItem","access_token","setUsername","replace","origin","pathname","Sun","strokeWidth","strokeLinecap","strokeLinejoin","Moon","background","Toggle","toggleTheme","GlobalStyles","createGlobalStyle","lightTheme","darkTheme","Application","urlParams","setTheme","setMode","localTheme","useDarkMode","themeToggler","themeMode","Helmet","charSet","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d68bf2d3.chunk.js","sourcesContent":["export const config = {\r\n  // Your Github Converted Token To Know How To Get Your Token Look at Readme.md\r\n  githubConvertedToken: \"ZjkwYTBjNWRhNzlmNDYxMzY2Zjc3NDVhZDZkMjRjYmRjOTFhMjg5NA==\",\r\n\r\n  // Your Github UserName\r\n  githubUserName: \"muath-gh\",\r\n\r\n  // Your Github Repo Name Where You Have your issues as Blog\r\n  githubRepo: \"myblog\",\r\n\r\n  // Set it to true if you have a Github app to add to this project\r\n  // and fill the client ID & secret\r\n  enableOAuth: false,\r\n  OAuthClientID: 'Iv1.9f40fd53257d4102',\r\n  OAuthSecret: 'cc3db76ffe9848c92d83172807eececa79f0eb22',\r\n\r\n  // Your Personal Blog Title\r\n  title : \"Muath Al-Gharabli\" ,\r\n\r\n  // Your Personal Blog Subtitle\r\n  subtitle : \"Software Developer\",\r\n\r\n  // Header customization\r\n  header: {\r\n    backgroundColor: '#f1f6f8', // can be a CSS gradient\r\n    backgroundColorDark: '#4C566A',\r\n    titleColor: '#ff5252',\r\n    titleColorDark: '#16a085',\r\n    subtitleColor: '#37474f',\r\n    subtitleColorDark: '#D8DEE9',\r\n  },\r\n};\r\n","import ApolloClient from \"apollo-boost\";\r\n\r\nimport { config } from '../config'\r\n\r\nexport const client = new ApolloClient({\r\n  uri: \"https://api.github.com/graphql\",\r\n  request: operation => {\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: `Bearer ${atob(config.githubConvertedToken)}`\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\nexport const userClient = (token) => new ApolloClient({\r\n  uri: \"https://api.github.com/graphql\",\r\n  request: operation => {\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n  }\r\n});","import styled from 'styled-components'\r\n\r\nimport { config } from '../../config'\r\nconst { backgroundColor, backgroundColorDark } = config.header;\r\n\r\nexport const HeaderContainer = styled.div`\r\n  position: relative;\r\n  padding: 5em;\r\n  text-align: center;\r\n  background: ${(props) => props.theme.mode === \"light\" ? backgroundColor : backgroundColorDark};\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  background-size: cover;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 3em;\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding: 0 1em;\r\n  max-width: 1140px;\r\n  text-align: center;\r\n`","import styled from 'styled-components'\r\n\r\nimport { config } from '../../config'\r\nconst { titleColor, titleColorDark } = config.header\r\n\r\nexport const HeaderTitle = styled.h1`\r\n  font-weight: 700;\r\n  line-height: 1.15;\r\n  margin: 1.25rem 0;\r\n  font-size: 4.5em;\r\n  text-align: center;\r\n  color: ${(props) => props.theme.mode === \"light\" ? titleColor : titleColorDark};\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 3em;\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nimport { config } from '../../config'\r\nconst { subtitleColor, subtitleColorDark } = config.header\r\n\r\nexport const HeaderSubtitle = styled.h1`\r\n  font-weight: 400;\r\n  color: ${(props) => props.theme.mode === \"light\" ? subtitleColor : subtitleColorDark};\r\n  line-height: 1.15;\r\n  margin: 1.25rem 0;\r\n  font-size: 2.5em;\r\n  text-align: center;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 2em;\r\n  }\r\n`","import React from 'react'\r\n\r\nimport {\r\n    HeaderContainer,\r\n    HeaderWrapper,\r\n    HeaderTitle,\r\n    HeaderSubtitle,\r\n    GithubLogin\r\n} from './'\r\nimport { config } from \"../../config\"\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <HeaderContainer>\r\n            {/* <GithubLogin isAbsolute={true} /> */}\r\n            <HeaderWrapper>\r\n                <HeaderTitle>{config.title}</HeaderTitle>\r\n                <HeaderSubtitle>{config.subtitle}</HeaderSubtitle>\r\n            </HeaderWrapper>\r\n        </HeaderContainer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { config } from '../../config'\r\n\r\nconst { enableOAuth, OAuthClientID } = config\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: ${enableOAuth ? 'block' : 'none'};\r\n  position: ${({ absolute }) => absolute ? 'absolute' : 'initial'};\r\n  top: 10px;\r\n  right: 10px;\r\n`\r\nconst Button = styled.button`\r\n  -webkit-appearance: none;\r\n  background: linear-gradient(180deg, rgb(136, 220, 109) 0%, rgb(92, 168, 65) 100%);\r\n  color: #FFF;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  font-size: 16px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  outline: 0;\r\n\r\n  :hover {\r\n    box-shadow: 0px 0px 10px 1px rgba(0,0,0,0.10);\r\n  }\r\n`\r\n\r\nconst Text = styled.span`\r\n  color: #FFF;\r\n  font-size: 18px;\r\n`\r\n\r\nexport const GithubLogin = ({ isAbsolute }) => {\r\n  const isLoggedIn = localStorage.getItem('githubToken') || false\r\n\r\n  const callOAuth = async () => {\r\n    window.location.href = 'https://github.com/login/oauth/authorize?client_id=' + OAuthClientID;\r\n  }\r\n\r\n  return (\r\n    <ButtonContainer absolute={isAbsolute}>\r\n      {!isLoggedIn\r\n       ? (\r\n          <Button onClick={callOAuth}>\r\n            <FontAwesomeIcon icon={faGithub} /> Log in\r\n          </Button>\r\n         )\r\n       : <Text>Logged in as {localStorage.getItem('githubUsername')}</Text>\r\n      }\r\n    </ButtonContainer>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function LoaderSvg({ fill }) {\r\n  return (\r\n    <svg\r\n      width=\"80\"\r\n      height=\"80\"\r\n      viewBox=\"0 0 38 38\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      stroke={fill}\r\n    >\r\n      <g fill=\"none\" fill-rule=\"evenodd\">\r\n        <g transform=\"translate(1 1)\" stroke-width=\"2\">\r\n          <circle stroke-opacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\r\n          <path d=\"M36 18c0-9.94-8.06-18-18-18\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"rotate\"\r\n              from=\"0 18 18\"\r\n              to=\"360 18 18\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n          </path>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport LoaderSvg from './LoaderSvg'\r\n\r\nconst LoaderContainer = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 200px;\r\n`\r\n\r\nexport const Loader = () => (\r\n  <LoaderContainer>\r\n    <LoaderSvg fill=\"#2ecc71\" />\r\n  </LoaderContainer>\r\n)","import styled from 'styled-components'\r\n\r\nexport const BlogContainer = styled.div`\r\n  margin: 2rem auto 0;\r\n  width: 90%;\r\n  max-width: 700px;\r\n  padding: 20px 10px;\r\n`","import styled from 'styled-components'\r\n\r\nexport const CardContainer = styled.div`\r\n  cursor: pointer;\r\n  margin-bottom: 6rem;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  transition: 0.2s;\r\n  position: relative;\r\n\r\n  :hover {\r\n    background-color: ${props => props.theme.mode === 'light' ? '#F5F5F5' : '#3B4252'};\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nexport const CardHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCategory = styled.div`\r\n  display: inline-block;\r\n  background: #009bbb;\r\n  border-radius: 3px;\r\n  padding: 3px 15px;\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n  color: ${ props => props.theme.body };\r\n  font-weight: 300;\r\n  line-height: 28px;\r\n  font-family: \"Quicksand\";\r\n  margin-right: 10px;\r\n`\r\n\r\nexport const CardCategory = ({ value }) => (\r\n  <StyledCategory\r\n    key={value.id}\r\n    style={{ backgroundColor: `#${value.color}` }}>\r\n    {value.name}\r\n  </StyledCategory>\r\n)","import styled from 'styled-components'\r\n\r\nexport const CardTitle = styled.h2`\r\n  font-size: 34px;\r\n`","import styled from 'styled-components'\r\n\r\nexport const CardDescription = styled.p`\r\n  font-size: 18px;\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ReadingTime = styled.p`\r\n  color: #b5b5b5;\r\n  font-size: 15px;\r\n  position: absolute;\r\n  top: -10px;\r\n  right: 10px;\r\n`\r\n\r\nexport const CardReadingTime = ({ time }) => (\r\n  <ReadingTime>{time} Min Read</ReadingTime>\r\n)","import React, { useState, useEffect } from \"react\";\r\nimport readingTime from \"reading-time\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  CardContainer,\r\n  CardHeader,\r\n  CardCategory,\r\n  CardReadingTime,\r\n  CardTitle,\r\n  CardDescription,\r\n} from './'\r\n\r\nexport const Card = ({ blog }) => {\r\n  const [labels, setLabels] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const openBlog = (title, number) => {\r\n    history.push(`/blog/${title}/${number}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const labels = blog.labels.nodes.filter((value) => {\r\n      return value.name !== \"blog\";\r\n    });\r\n\r\n    setLabels(labels);\r\n  }, [blog.labels.nodes]);\r\n\r\n  return (\r\n    <CardContainer>\r\n      <CardHeader>\r\n        <>\r\n        {labels.map((value, i) => {\r\n          return (\r\n            <CardCategory value={value} key={i} />\r\n          );\r\n        })}\r\n        </>\r\n        <CardReadingTime time={readingTime(blog.body).minutes} />\r\n      </CardHeader>\r\n      <div onClick={() => openBlog(blog.title, blog.number)}>\r\n        <CardTitle>{blog.title}</CardTitle>\r\n        <CardDescription>\r\n          {blog.bodyText}\r\n        </CardDescription>\r\n      </div>\r\n    </CardContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nimport { config } from \"../config\";\r\nimport { Header } from \"../Components/Header\";\r\nimport { Loader } from '../Components/Common'\r\nimport { BlogContainer } from '../Components/Blog'\r\nimport { Card } from '../Components/Blog/Card'\r\n\r\nconst GET_POSTS = gql`\r\n{\r\n  \r\n  repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\r\n    issues(first: 100, states: OPEN, filterBy: { labels: \"blog\" }, orderBy: { direction: DESC, field: CREATED_AT }) {\r\n      nodes {\r\n        title\r\n        body\r\n        bodyHTML\r\n        bodyText\r\n        number\r\n        labels(first: 100) {\r\n          nodes {\r\n            color\r\n            name\r\n            id\r\n          }\r\n        }\r\n        author {\r\n          url\r\n          avatarUrl\r\n          login\r\n        }\r\n        updatedAt\r\n        id\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst Blog = () => {\r\n  \r\n  const [posts, setPosts] = useState([]);\r\n  const { loading, error, data } = useQuery(GET_POSTS);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (error) {\r\n        console.error(error)\r\n      }\r\n\r\n      if (data) {\r\n        console.log(data);\r\n        setPosts(data?.repository?.issues?.nodes)\r\n      }\r\n    }\r\n  }, [loading, error, data]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <BlogContainer>\r\n        {\r\n          loading\r\n          ? <Loader />\r\n          : posts.map((v, i) => {\r\n              return <Card blog={v} key={i} />;\r\n            })\r\n        }\r\n      </BlogContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Blog;\r\n","import { reverseMapping } from './tools'\r\n\r\nconst emojis = {\r\n  'THUMBS_UP': '👍',\r\n  'THUMBS_DOWN': '👎',\r\n  'LAUGH': '😄',\r\n  'HOORAY': '🎉',\r\n  'CONFUSED': '😕',\r\n  'HEART': '❤️',\r\n  'ROCKET': '🚀',\r\n  'EYES': '👀',\r\n}\r\n\r\nexport const getEmojiByName = (emojiName) => {\r\n  return emojis[emojiName] || '';\r\n};\r\n\r\nexport const getNameByEmoji = (emoji) => {\r\n  return reverseMapping(emojis)[emoji] || '';\r\n};","export const reverseMapping = (obj) => {\r\n  const reversed = {};\r\n  Object.keys(obj).forEach((key) => {\r\n      reversed[obj[key]] = key\r\n  });\r\n  return reversed;\r\n};","export const getToken = () => {\r\n  return localStorage.getItem('githubToken');\r\n}\r\n\r\nexport const getAuthenticatedUser = async () => {\r\n  const token = localStorage.getItem('githubToken');\r\n  if (token) {\r\n    const response = await fetch('https://api.github.com/user', {\r\n      headers: new Headers({\r\n        authorization: `Bearer ${token}`\r\n      }),\r\n    });\r\n    const result = await response.json();\r\n    result.token = token;\r\n    return result;\r\n  }\r\n}","import styled from 'styled-components'\r\n\r\nexport const PostContainer = styled.div`\r\n  margin: 2rem auto 0;\r\n  width: 90%;\r\n  max-width: 700px;\r\n  padding: 20px 10px;\r\n  position: relative;\r\n`","import styled from 'styled-components'\r\n\r\nexport const PostTitle = styled.h1`\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 30px;\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nexport const PostDate = styled.p`\r\n  color: ${ props => props.theme.toggleBorder };\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  margin-bottom: 0px;\r\n  margin-top: 0px;\r\n`","import styled from 'styled-components'\r\n\r\nexport const PostDateLink = styled.a`\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  transition-duration: 0.15s, 0.15s, 0.15s;\r\n  transition-timing-function: ease-in, ease-in, ease-in;\r\n  transition-delay: 0s, 0s, 0s;\r\n  color: ${ props => props.theme.toggleBorder };\r\n  \r\n  :hover {\r\n    color: ${ props => props.theme.text };\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nexport const PostReaction = styled.span`\r\n  position: static;\r\n  bottom: 60px;\r\n  animation-name: scale-in;\r\n  animation-duration: 0.15s;\r\n  animation-timing-function: cubic-bezier(0.2, 0, 0.13, 1.5);\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const BackButton = styled.button`\r\n  outline: none;\r\n  border: 1px solid;\r\n  font-size: 22px;\r\n  font-family: \"Shadows Into Light\", serif;\r\n  border-radius: 5px;\r\n  padding: 0px 20px 0 30px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  background-color: ${ props => props.theme.body };\r\n  color: ${ props => props.theme.text };\r\n\r\n  :hover {\r\n    background-color: ${ props => props.theme.mode === 'light' ? '#373737' : '#6B8096' };\r\n    color: white;\r\n  }\r\n\r\n  :before {\r\n    content: \"\\\\27A4\";\r\n    position: absolute;\r\n    transform: translateY(-50%) rotate(180deg);\r\n    left: 10px;\r\n    font-size: 16px;\r\n    top: 54%;\r\n  }\r\n`;\r\n","import styled from 'styled-components'\r\n\r\nexport const AuthorDetails = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`","import styled from 'styled-components'\r\n\r\nexport const AuthorAvatar = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 40px;\r\n  margin: 10px;\r\n  margin-left: 0px;\r\n`","import styled from 'styled-components'\r\n\r\nexport const AuthorName = styled.p`\r\n  margin-bottom: 0px;\r\n  margin-top: 0px;\r\n  font-size: 16px;\r\n  color: ${ props => props.theme.text };\r\n`","import React from \"react\";\r\n\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport {docco} from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\n\r\nexport const HyperLink = ({children, ...props}) => (\r\n  <a\r\n    href={props.href}\r\n    target=\"_blank\"\r\n    rel=\"noopener noreferrer\"\r\n    className=\"blog-post-anchor\"\r\n  >\r\n    {children}\r\n    <style jsx=\"true\">\r\n      {`\r\n        a {\r\n          color: #484848;\r\n          font-weight: 400;\r\n        }\r\n      `}\r\n    </style>\r\n  </a>\r\n);\r\n\r\nexport const CodeBlock = ({children}) => (\r\n  <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n    {children.props.children}\r\n  </SyntaxHighlighter>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const CommentContainer = styled.div`\r\n  margin-top: 3rem;\r\n  border-radius: 10px;\r\n  padding: 10px 30px;\r\n  position: relative;\r\n  color: ${(props) => props.theme.text};\r\n  border: ${(props) => props.theme.text} solid 1px;\r\n  font-size: 16px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CommentLink = styled.a`\r\n  outline: none;\r\n  border: 1px solid;\r\n  font-size: 22px;\r\n  font-family: \"Shadows Into Light\", serif;\r\n  border-radius: 5px;\r\n  padding: 0px 20px 0 20px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  background-color: ${ props => props.theme.body };\r\n  color: ${ props => props.theme.text };\r\n  text-decoration: none;\r\n  margin: auto;\r\n\r\n  :hover {\r\n    background-color: ${ props => props.theme.mode === 'light' ? '#373737' : '#6B8096' };\r\n    color: white;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CommentLinkContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 3rem;\r\n`;\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport moment from \"moment\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport readingTime from \"reading-time\";\r\nimport { GithubSelector, GithubCounter } from \"react-reactions\";\r\nimport { userClient } from '../Utils/apollo'\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport { config } from \"../config\";\r\nimport { getEmojiByName, getNameByEmoji } from '../Utils/emoji';\r\nimport { getAuthenticatedUser } from '../Utils/auth'\r\nimport { Loader } from \"../Components/Common\";\r\nimport { PostContainer, PostTitle, PostDate, PostDateLink, PostReaction, BackButton } from \"../Components/Post\";\r\nimport { AuthorDetails, AuthorAvatar, AuthorName } from \"../Components/Post/Author\";\r\nimport { GithubLogin } from '../Components/Header'\r\nimport { HyperLink, CodeBlock } from '../Components/Markdown/Overrides';\r\nimport CommentsSection from \"./CommentsSection\";\r\n\r\nexport default function BlogHome() {\r\n  const issueNumber = parseInt(window.location.href.split(\"/\").pop());\r\n  const GET_POSTS = gql`{\r\n    repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\r\n      issue(number: ${issueNumber}) {\r\n        title\r\n        body\r\n        bodyHTML\r\n        url\r\n        bodyText\r\n        number\r\n        bodyHTML\r\n        author {\r\n          url\r\n          avatarUrl\r\n          login\r\n        }\r\n        reactions(first:100){\r\n          nodes{\r\n            content\r\n            user{\r\n              id\r\n              login\r\n            }\r\n          }\r\n        }\r\n        updatedAt\r\n        id\r\n        comments(first:100) {\r\n          nodes {\r\n            author {\r\n              ... on User {\r\n                avatarUrl\r\n                name\r\n                login\r\n              }\r\n            }\r\n            body\r\n            bodyHTML\r\n            bodyText\r\n            publishedAt\r\n            updatedAt\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `;\r\n  const [post, setPost] = useState([]);\r\n  const [postNodeId, setPostNodeId] = useState('');\r\n  const [reactionPopup, setReactionPopup] = useState(false);\r\n  const [postReactions, setPostReactions] = useState([]);\r\n  const [postComments, setPostComments] = useState([]);\r\n  const { loading, error, data } = useQuery(GET_POSTS);\r\n  const reactionsContainer = useRef(null);\r\n  const userToken = localStorage.getItem('githubToken');\r\n\r\n  const setReactionFun = useCallback((reactions) => {\r\n    // {\r\n    //   emoji: \"👍\", // String emoji reaction\r\n    //   by: \"case\" // String of persons name\r\n    // }\r\n\r\n    let reactions_array = [];\r\n    reactions.forEach(element => {\r\n      let obj = {\r\n        by: element.user.login,\r\n        emoji: getEmojiByName(element.content)\r\n      };\r\n      reactions_array.push(obj);\r\n    });\r\n\r\n    setPostReactions(reactions_array);\r\n  }, []);\r\n\r\n  const toggleReaction = async (emoji) => {\r\n    let reactions = postReactions;\r\n    const user = await getAuthenticatedUser();\r\n    const existingReaction = reactions.filter(r => (r.emoji === emoji && r.by === user.login))\r\n\r\n    if (existingReaction.length === 0) {\r\n      const reactionToAdd = {\r\n        by: user.login,\r\n        emoji: emoji,\r\n      }\r\n\r\n      // Add the reaction\r\n      await userClient(userToken).mutate({\r\n        mutation: gql`\r\n          mutation AddReaction {\r\n            addReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(emoji)},clientMutationId:\"${user.node_id}\"}) {\r\n              reaction {\r\n                id\r\n              }\r\n            }\r\n          }\r\n        `\r\n      });\r\n\r\n      reactions.push(reactionToAdd);\r\n    } else {\r\n      // Remove the reaction\r\n      await userClient(userToken).mutate({\r\n        mutation: gql`\r\n          mutation RemoveReaction {\r\n            removeReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(emoji)},clientMutationId:\"${user.node_id}\"}) {\r\n              reaction {\r\n                id\r\n              }\r\n            }\r\n          }\r\n        `\r\n      });\r\n\r\n      // Remove the reaction from the state\r\n      reactions = reactions.filter(r => !(r.by === user.login && r.emoji === emoji))\r\n    }\r\n\r\n    setPostReactions(reactions);\r\n    reactionsContainer.current.forceUpdate(); // refresh the counter\r\n    setReactionPopup(false); // hiding the reactions choice\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (data) {\r\n        const issues = data.repository.issue;\r\n        setPostNodeId(issues.id);\r\n        setPost(issues);\r\n        setReactionFun(issues.reactions.nodes);\r\n        setPostComments(issues.comments.nodes);\r\n      }\r\n    }\r\n  }, [loading, error, data, setReactionFun]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  const onBackClick = () => {\r\n    // ifthe previous page does not exist in the history list. this method to load the previous (or next) URL in the history list.\r\n    window.history.go();\r\n    // The back() method loads the previous URL in the history list.\r\n    window.history.back();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {post.title && (\r\n        <PostContainer>\r\n          <BackButton onClick={() => onBackClick()}>Back</BackButton>\r\n\r\n          <PostTitle>{post.title}</PostTitle>\r\n          <div>\r\n            <AuthorDetails>\r\n              <AuthorAvatar src={post.author.avatarUrl} alt={post.author.login} />\r\n              <div>\r\n                <AuthorName>{post.author.login}</AuthorName>\r\n                <PostDate>\r\n                  {moment(post.updatedAt).format(\"DD MMM YYYY\")} .{readingTime(post.body).minutes} Min Read .\r\n                  <PostDateLink href={post.url} target=\"_black\">\r\n                    View On Github\r\n                  </PostDateLink>\r\n                </PostDate>\r\n              </div>\r\n            </AuthorDetails>\r\n          </div>\r\n          <Markdown\r\n            options={{\r\n              overrides: {\r\n                a: {\r\n                  component: HyperLink\r\n                },\r\n                pre: {\r\n                  component: CodeBlock\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {post.body}\r\n          </Markdown>\r\n          {reactionPopup && (\r\n            <PostReaction>\r\n              {userToken\r\n                ? <GithubSelector onSelect={emoji => toggleReaction(emoji)} />\r\n                : <GithubLogin isAbsolute={false} />\r\n              }\r\n            </PostReaction>\r\n          )}\r\n          {/* <GithubCounter\r\n            ref={reactionsContainer}\r\n            counters={postReactions}\r\n            onSelect={emoji => toggleReaction(emoji)}\r\n            onAdd={() => setReactionPopup(!reactionPopup)}\r\n          /> */}\r\n          {/* <CommentsSection postUrl={post.url} comments={postComments} /> */}\r\n        </PostContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Blog from \"./Containers/Blog\"\r\nimport BlogPost from \"./Containers/BlogPost\";\r\n\r\nvar createBrowserHistory = require(\"history\").createBrowserHistory;\r\nconst history = createBrowserHistory();\r\n\r\nconst Router = () => {\r\n  return (\r\n    <HashRouter history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Blog} />\r\n        <Route exact path=\"/blog/:title/:issueNumber\" component={BlogPost}/>\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { config } from '../config'\r\nimport { getAuthenticatedUser } from '../Utils/auth'\r\nimport { Loader } from '../Components/Common/Loader'\r\n\r\nconst { enableOAuth, OAuthClientID, OAuthSecret } = config\r\n\r\nconst GithubCallback = () => {\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const authenticate = async (code) => {\r\n    // Apparently we need to use a proxy to make this request (CORS blocked for client-side only applications)\r\n    const response = await fetch('https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token', {\r\n      method: 'POST',\r\n      body: new URLSearchParams({\r\n        client_id: OAuthClientID,\r\n        client_secret: OAuthSecret,\r\n        code: code,\r\n      }),\r\n      headers: new Headers({\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      }),\r\n    })\r\n\r\n    return response.json()\r\n  }\r\n\r\n  const setUsername = async () => {\r\n    const { login } = await getAuthenticatedUser()\r\n    localStorage.setItem('githubUsername', login)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    authenticate(urlParams.get('code'))\r\n    .then((response) => {\r\n      if (response) {\r\n        localStorage.setItem('githubToken', response.access_token)\r\n        setUsername().then(() => setLoading(false))\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  if (!enableOAuth || !loading) {\r\n    return window.location.replace(window.location.origin + window.location.pathname);\r\n  }\r\n\r\n  return <Loader />\r\n}\r\n\r\nexport default GithubCallback\r\n","import React from \"react\";\r\n\r\nexport default function Sun() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    >\r\n      <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\r\n      <path d=\"M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42\"></path>\r\n    </svg>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Moon() {\r\n    return (\r\n        <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"24\"\r\n        height=\"24\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      >\r\n        <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\r\n      </svg>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Sun from \"./Sun\";\r\nimport Moon from \"./Moon\";\r\nimport { func, string } from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nconst Button = styled.button`\r\n  background-color: ${({ theme }) => theme.background};\r\n  border: 2px solid ${({ theme }) => theme.background};\r\n  color: ${({ theme }) => theme.text};\r\n  width: 70px;\r\n  height: 70px;\r\n  outline: none;\r\n  border-radius: 50%;\r\n  transition: all 0.1s ease-in-out;\r\n  color: white;\r\n  text-align: center;\r\n  position: fixed;\r\n  cursor: pointer;\r\n  right: 30px;\r\n  bottom: 30px;\r\n  box-shadow:\r\n  0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n  0 6.7px 5.3px rgba(0, 0, 0, 0.048),\r\n  0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n  0 22.3px 17.9px rgba(0, 0, 0, 0.072),\r\n  0 41.8px 33.4px rgba(0, 0, 0, 0.086),\r\n  0 100px 80px rgba(0, 0, 0, 0.12);\r\n  }`;\r\nconst Toggle = ({ theme, toggleTheme }) => {\r\n  return (\r\n    <Button onClick={toggleTheme}>\r\n      {theme === \"light\" ? <Moon /> : <Sun />}\r\n    </Button>\r\n  );\r\n};\r\nToggle.propTypes = {\r\n  theme: string.isRequired,\r\n  toggleTheme: func.isRequired,\r\n};\r\nexport default Toggle;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    transition: all 0.25s linear;\r\n  }\r\n  `;\r\n","export const lightTheme = {\r\n  mode: \"light\",\r\n  body: \"#fff\",\r\n  text: \"#363537\",\r\n  toggleBorder: \"#070707\",\r\n  background: \"#363537\",\r\n};\r\nexport const darkTheme = {\r\n  mode: \"dark\",\r\n  body: \"#2E3440\",\r\n  text: \"#FAFAFA\",\r\n  toggleBorder: \"#6B8096\",\r\n  background: \"#999\",\r\n};\r\n","import React from 'react'\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport { Helmet } from \"react-helmet\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nimport { config } from './config'\r\nimport { client } from './Utils/apollo';\r\nimport Router from './Router';\r\nimport GithubCallback from './Containers/GithubCallback';\r\nimport Toggle from \"./Components/Theme/Toggler\";\r\nimport { GlobalStyles } from \"./Components/Theme/GlobalStyles\";\r\nimport { lightTheme, darkTheme } from \"./Components/Theme/Theme\";\r\nimport  { useDarkMode } from \"./Components/Theme/useDarkMode\";\r\n\r\nconst Application = () => {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const [theme, themeToggler] = useDarkMode();\r\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\r\n\r\n  if (urlParams.get('code')) {\r\n    return <GithubCallback />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n          <title>{config.title}</title>\r\n          <meta charSet=\"utf-8\" />\r\n          <meta name=\"description\" content={config.subtitle} />\r\n          <meta name=\"theme-color\" content={config.header.backgroundColor} />\r\n      </Helmet>\r\n      <ApolloProvider client={client}>\r\n        <ThemeProvider theme={themeMode} toggleTheme={themeToggler}>\r\n          <GlobalStyles />\r\n          <Router />\r\n          <Toggle theme={theme} toggleTheme={themeToggler} />\r\n        </ThemeProvider>\r\n      </ApolloProvider>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Application;","import { useEffect, useState } from 'react';\r\nexport const useDarkMode = () => {\r\n    const [theme, setTheme] = useState('light');\r\n\r\n    const setMode = mode => {\r\n        window.localStorage.setItem('theme', mode)\r\n        setTheme(mode)\r\n    };\r\n\r\n    const themeToggler = () => {\r\n        theme === 'light' ? setMode('dark') : setMode('light')\r\n    };\r\n\r\n    useEffect(() => {\r\n        const localTheme = window.localStorage.getItem('theme');\r\n        localTheme && setTheme(localTheme)\r\n    }, []);\r\n    return [theme, themeToggler]\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Application from './Application';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<Application />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nif(process.env.NODE_ENV === 'production') serviceWorker.register();\r\nelse serviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}